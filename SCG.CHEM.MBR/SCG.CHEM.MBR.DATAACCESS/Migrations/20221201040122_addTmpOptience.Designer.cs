// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SCG.CHEM.MBR.DATAACCESS;

#nullable disable

namespace SCG.CHEM.MBR.DATAACCESS.Migrations
{
    [DbContext(typeof(EntitiesMBRContext))]
    [Migration("20221201040122_addTmpOptience")]
    partial class addTmpOptience
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("mbr")
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SCG.CHEM.MBR.DATAACCESS.Entities.Logging.LOG_API", b =>
                {
                    b.Property<long>("InterfaceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("InterfaceId"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Criteria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cycle")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InboundMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InboundTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("InterfaceStatus")
                        .HasColumnType("int");

                    b.Property<bool?>("IsValidationSuccess")
                        .HasColumnType("bit");

                    b.Property<string>("OutboundMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OutboundTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("PlanType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ServicePath")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("InterfaceId");

                    b.ToTable("LOG_API", "mbr");
                });

            modelBuilder.Entity("SCG.CHEM.MBR.DATAACCESS.Entities.Logging.LOG_SEND_DWH", b =>
                {
                    b.Property<long>("InterfaceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("InterfaceId"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Cycle")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InboundMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InboundTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("InterfaceStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OutboundMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OutboundTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("PlanType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PlanningGroup")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SalesGroupCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ServicePath")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("InterfaceId");

                    b.ToTable("LOG_SEND_DWH", "mbr");
                });

            modelBuilder.Entity("SCG.CHEM.MBR.DATAACCESS.Entities.Master.MBR_FCT_MARKETPRICEOLEFINS", b =>
                {
                    b.Property<string>("ActiveWeb")
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("ACTIVE_WEB");

                    b.Property<decimal>("AvgPrice")
                        .HasColumnType("decimal(16,2)")
                        .HasColumnName("AVG_PRICE");

                    b.Property<string>("Incoterm")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("INCOTERM");

                    b.Property<decimal>("MaxPrice")
                        .HasColumnType("decimal(16,2)")
                        .HasColumnName("MAX_PRICE");

                    b.Property<decimal>("MinPrice")
                        .HasColumnType("decimal(16,2)")
                        .HasColumnName("MIN_PRICE");

                    b.Property<string>("PriceSource")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PRICE_SOURCE");

                    b.Property<string>("PricingDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PRICING_DATE");

                    b.Property<string>("PricingMonth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PRICING_MONTH");

                    b.Property<string>("PricingWeek")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PRICING_WEEK");

                    b.Property<string>("PricingWeekNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PRICING_WEEKNO");

                    b.Property<string>("PricingYear")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PRICING_YEAR");

                    b.Property<string>("Product")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PRODUCT");

                    b.Property<string>("ProductColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PRODUCT_COLOR");

                    b.Property<string>("ProductForm")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PRODUCT_FORM");

                    b.Property<string>("ProductWeb")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PRODUCT_WEB");

                    b.Property<string>("Scenario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SCENARIO");

                    b.Property<string>("SubScenario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SUB_SCENARIO");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("UNIT");

                    b.Property<string>("region")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("REGION");

                    b.ToTable("MBR_FCT_MarketPriceOlefins", "mbr");
                });

            modelBuilder.Entity("SCG.CHEM.MBR.DATAACCESS.Entities.Master.MBR_MST_CASE", b =>
                {
                    b.Property<int>("CaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CaseId"), 1L, 1);

                    b.Property<string>("CaseDesc")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CaseId");

                    b.ToTable("MBR_MST_Case", "mbr");
                });

            modelBuilder.Entity("SCG.CHEM.MBR.DATAACCESS.Entities.Master.MBR_MST_CUSTOMER_VENDOR_MAPPING", b =>
                {
                    b.Property<string>("CustomerShortName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Type")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("VersionNo")
                        .HasColumnType("int");

                    b.Property<string>("SourceSystem")
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedFlag")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("CustomerShortName", "Type", "VersionNo", "SourceSystem");

                    b.ToTable("MBR_MST_CustomerVendorMapping", "mbr");
                });

            modelBuilder.Entity("SCG.CHEM.MBR.DATAACCESS.Entities.Master.MBR_MST_DATAFACTORY_RUN", b =>
                {
                    b.Property<string>("RunId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MasterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("RunId");

                    b.ToTable("MBR_MST_DataFactoryRun", "mbr");
                });

            modelBuilder.Entity("SCG.CHEM.MBR.DATAACCESS.Entities.Master.MBR_MST_DELETE_FLAG", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("MBR_MST_DeleteFlag", "mbr");
                });

            modelBuilder.Entity("SCG.CHEM.MBR.DATAACCESS.Entities.Master.MBR_MST_EXPORT_MAPPING", b =>
                {
                    b.Property<int>("MasterId")
                        .HasColumnType("int");

                    b.Property<string>("Variable")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ExcelHeader")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Sequence")
                        .HasColumnType("int");

                    b.HasKey("MasterId", "Variable");

                    b.ToTable("MBR_MST_ExportMapping", "mbr");
                });

            modelBuilder.Entity("SCG.CHEM.MBR.DATAACCESS.Entities.Master.MBR_MST_FormulaParameterMapping", b =>
                {
                    b.Property<string>("FormulaID")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("FormulaName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Parameter")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ConditionVariable")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("ProcessDate")
                        .HasColumnType("datetime2");

                    b.HasKey("FormulaID", "FormulaName", "Parameter", "ConditionVariable");

                    b.ToTable("MBR_MST_FormulaParameterMapping", "mbr");
                });

            modelBuilder.Entity("SCG.CHEM.MBR.DATAACCESS.Entities.Master.MBR_MST_HISTORY_TYPE", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("MBR_MST_HistoryType", "mbr");
                });

            modelBuilder.Entity("SCG.CHEM.MBR.DATAACCESS.Entities.Master.MBR_MST_LSP_PRICE_FORMULA", b =>
                {
                    b.Property<string>("FormulaName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FORMULA_NAME");

                    b.Property<int>("VersionNo")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedFlag")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("FormulaDescription")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("FORMULA_DESCRIPTION");

                    b.Property<string>("FormulaEquation")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("FORMULA_EQUATION");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("PRODUCT_CODE");

                    b.Property<string>("ProductDescription")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PRODUCT_DESCRIPTION");

                    b.Property<string>("ProductShortName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PRODUCT_SHORT_NAME");

                    b.HasKey("FormulaName", "VersionNo");

                    b.ToTable("MBR_MST_LSPPriceFormula", "mbr");
                });

            modelBuilder.Entity("SCG.CHEM.MBR.DATAACCESS.Entities.Master.MBR_MST_MARKET_PRICE_MAPPING", b =>
                {
                    b.Property<string>("MarketPriceMI")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MarketPriceWebPricing")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("VersionNo")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedFlag")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("EBACode")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("MarketPriceName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MarketPriceShortName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MarketPriceMI", "MarketPriceWebPricing", "VersionNo");

                    b.ToTable("MBR_MST_MarketPriceMapping", "mbr");
                });

            modelBuilder.Entity("SCG.CHEM.MBR.DATAACCESS.Entities.Master.MBR_MST_MASTER", b =>
                {
                    b.Property<int>("MasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MasterId"), 1L, 1);

                    b.Property<string>("MasterName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MasterTable")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MasterTemp")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Mode")
                        .HasColumnType("int");

                    b.Property<string>("PlanType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Sheet")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ViewExport")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ViewTemplate")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MasterId");

                    b.ToTable("MBR_MST_Master", "mbr");
                });

            modelBuilder.Entity("SCG.CHEM.MBR.DATAACCESS.Entities.Master.MBR_MST_MASTER_EXCEL", b =>
                {
                    b.Property<int>("ExcelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExcelId"), 1L, 1);

                    b.Property<string>("MasterName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MasterTable")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ExcelId");

                    b.ToTable("MBR_MST_MasterExcel", "mbr");
                });

            modelBuilder.Entity("SCG.CHEM.MBR.DATAACCESS.Entities.Master.MBR_MST_MASTER_EXCEL_MAPPING", b =>
                {
                    b.Property<int>("ExcelId")
                        .HasColumnType("int");

                    b.Property<string>("Variable")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ExcelHeader")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDownload")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUpload")
                        .HasColumnType("bit");

                    b.Property<bool?>("Primary")
                        .HasColumnType("bit");

                    b.Property<bool?>("Require")
                        .HasColumnType("bit");

                    b.Property<int?>("Sequence")
                        .HasColumnType("int");

                    b.HasKey("ExcelId", "Variable");

                    b.ToTable("MBR_MST_MasterExcelMapping", "mbr");
                });

            modelBuilder.Entity("SCG.CHEM.MBR.DATAACCESS.Entities.Master.MBR_MST_MASTER_MAPPING", b =>
                {
                    b.Property<int>("MasterId")
                        .HasColumnType("int");

                    b.Property<string>("Variable")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ExcelHeader")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDownload")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUpload")
                        .HasColumnType("bit");

                    b.Property<bool?>("Primary")
                        .HasColumnType("bit");

                    b.Property<bool?>("Require")
                        .HasColumnType("bit");

                    b.Property<int?>("Sequence")
                        .HasColumnType("int");

                    b.HasKey("MasterId", "Variable");

                    b.ToTable("MBR_MST_MasterMapping", "mbr");
                });

            modelBuilder.Entity("SCG.CHEM.MBR.DATAACCESS.Entities.Master.MBR_MST_PAGES", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Pages")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id", "Pages");

                    b.ToTable("MBR_MST_Pages", "mbr");
                });

            modelBuilder.Entity("SCG.CHEM.MBR.DATAACCESS.Entities.Master.MBR_MST_PRODUCT_MAPPING", b =>
                {
                    b.Property<string>("MaterialCode")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("VersionNo")
                        .HasColumnType("int");

                    b.Property<string>("SourceSystem")
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedFlag")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("ProductGroup")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ProductShortName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaterialCode", "VersionNo", "SourceSystem");

                    b.ToTable("MBR_MST_ProductMapping", "mbr");
                });

            modelBuilder.Entity("SCG.CHEM.MBR.DATAACCESS.Entities.Master.MBR_MST_ROLES", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("RoleName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AvailableDWHPlanningGroups")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AvailableMasters")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AvailableNewProductFlag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AvailablePages")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AvailableSalesGroup")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AvailableUploadPlanningGroups")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedFlag")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id", "RoleName");

                    b.ToTable("MBR_MST_Roles", "mbr");
                });

            modelBuilder.Entity("SCG.CHEM.MBR.DATAACCESS.Entities.Master.MBR_MST_SCENARIO", b =>
                {
                    b.Property<int>("SceneId")
                        .HasColumnType("int");

                    b.Property<string>("SceneDesc")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SceneSDesc")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("SceneId");

                    b.ToTable("MBR_MST_Scenario", "mbr");
                });

            modelBuilder.Entity("SCG.CHEM.MBR.DATAACCESS.Entities.Master.MBR_MST_USERS", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Username")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedFlag")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Roles")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id", "Username");

                    b.ToTable("MBR_MST_Users", "mbr");
                });

            modelBuilder.Entity("SCG.CHEM.MBR.DATAACCESS.Entities.Master.MST_CONFIG", b =>
                {
                    b.Property<string>("ConfigId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CONFIG_ID");

                    b.Property<string>("ConfigDesc")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("CONFIG_DESC");

                    b.Property<string>("ConfigValue")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("CONFIG_VALUE");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("CREATED_BY");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATED_DATE");

                    b.Property<bool>("FlagAdminOnly")
                        .HasColumnType("bit")
                        .HasColumnName("FLAG_ADMIN_ONLY");

                    b.Property<bool>("FlagDecrypt")
                        .HasColumnType("bit")
                        .HasColumnName("FLAG_DECRYPT");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("UPDATED_BY");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UPDATED_DATE");

                    b.HasKey("ConfigId");

                    b.ToTable("MST_CONFIG", "mbr");
                });

            modelBuilder.Entity("SCG.CHEM.MBR.DATAACCESS.Entities.Master.MST_GROUP", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.ToTable("MST_GROUP", "mbr");
                });

            modelBuilder.Entity("SCG.CHEM.MBR.DATAACCESS.Entities.Master.MST_MENU", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ACTION");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ICON");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NAME");

                    b.Property<int?>("Order")
                        .HasColumnType("int")
                        .HasColumnName("ORDER");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int")
                        .HasColumnName("PARENT_ID");

                    b.HasKey("Id");

                    b.ToTable("MST_MENU", "mbr");
                });

            modelBuilder.Entity("SCG.CHEM.MBR.DATAACCESS.Entities.Master.MST_ROLE", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("NAME");

                    b.Property<int?>("RoleTypeId")
                        .HasColumnType("int")
                        .HasColumnName("ROLE_TYPE_ID");

                    b.HasKey("Id");

                    b.ToTable("MST_ROLE", "mbr");
                });

            modelBuilder.Entity("SCG.CHEM.MBR.DATAACCESS.Entities.Master.MST_USER_PROFILE", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("USER_ID");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATED_DATE");

                    b.Property<bool>("DeleteFlag")
                        .HasColumnType("bit")
                        .HasColumnName("DELETE_FLAG");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FIRST_NAME");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LAST_NAME");

                    b.Property<string>("PurchasingGroupId")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("PURCHASING_GROUP_ID");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("UPDATED_BY");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UPDATED_DATE");

                    b.HasKey("UserId");

                    b.ToTable("MST_USER_PROFILE", "mbr");
                });

            modelBuilder.Entity("SCG.CHEM.MBR.DATAACCESS.Entities.Relate.REL_GROUP_ROLE", b =>
                {
                    b.Property<short>("GroupId")
                        .HasColumnType("smallint")
                        .HasColumnName("GROUP_ID");

                    b.Property<short>("RoleId")
                        .HasColumnType("smallint")
                        .HasColumnName("ROLE_ID");

                    b.HasKey("GroupId", "RoleId");

                    b.ToTable("REL_GROUP_ROLE", "mbr");
                });

            modelBuilder.Entity("SCG.CHEM.MBR.DATAACCESS.Entities.Relate.REL_MENU_ROLE", b =>
                {
                    b.Property<int>("MenuId")
                        .HasColumnType("int")
                        .HasColumnName("MENU_ID");

                    b.Property<short>("RoleId")
                        .HasColumnType("smallint")
                        .HasColumnName("ROLE_ID");

                    b.HasKey("MenuId", "RoleId");

                    b.ToTable("REL_MENU_ROLE", "mbr");
                });

            modelBuilder.Entity("SCG.CHEM.MBR.DATAACCESS.Entities.Relate.REL_USER_GROUP", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("USER_ID");

                    b.Property<short>("GroupId")
                        .HasColumnType("smallint")
                        .HasColumnName("GROUP_ID");

                    b.HasKey("UserId", "GroupId");

                    b.ToTable("REL_USER_GROUP", "mbr");
                });

            modelBuilder.Entity("SCG.CHEM.MBR.DATAACCESS.Entities.Relate.REL_USER_ROLE", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("USER_ID");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("ROLE_ID");

                    b.HasKey("UserId");

                    b.ToTable("REL_USER_ROLE", "mbr");
                });

            modelBuilder.Entity("SCG.CHEM.MBR.DATAACCESS.Entities.Temp.MBR_TMP_CUSTOMER_VENDOR_MAPPING", b =>
                {
                    b.Property<string>("CustomerShortName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Type")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("VersionNo")
                        .HasColumnType("int");

                    b.Property<string>("SourceSystem")
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedFlag")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("CustomerShortName", "Type", "VersionNo", "SourceSystem");

                    b.ToTable("MBR_TMP_CustomerVendorMapping", "mbr");
                });

            modelBuilder.Entity("SCG.CHEM.MBR.DATAACCESS.Entities.Temp.MBR_TMP_LSP_PRICE_FORMULA", b =>
                {
                    b.Property<string>("FormulaName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FORMULA_NAME");

                    b.Property<int>("VersionNo")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedFlag")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("FormulaDescription")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("FORMULA_DESCRIPTION");

                    b.Property<string>("FormulaEquation")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("FORMULA_EQUATION");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("PRODUCT_CODE");

                    b.Property<string>("ProductDescription")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PRODUCT_DESCRIPTION");

                    b.Property<string>("ProductShortName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PRODUCT_SHORT_NAME");

                    b.HasKey("FormulaName", "VersionNo");

                    b.ToTable("MBR_TMP_LSPPriceFormula", "mbr");
                });

            modelBuilder.Entity("SCG.CHEM.MBR.DATAACCESS.Entities.Temp.MBR_TMP_MARKET_PRICE_FORECAST", b =>
                {
                    b.Property<string>("Case")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Case");

                    b.Property<string>("Scenario")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Scenario");

                    b.Property<string>("MarketSource")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MarketSource");

                    b.Property<string>("Cycle")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Cycle");

                    b.Property<string>("MonthIndex")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("MonthIndex");

                    b.Property<string>("CopiedFrom")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CopiedFrom");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CyclePoly")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CyclePoly");

                    b.Property<string>("MergedWith")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("MergedWith");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(15,5)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Unit");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Case", "Scenario", "MarketSource", "Cycle", "MonthIndex");

                    b.ToTable("MBR_TMP_MarketPriceForecast", "mbr");
                });

            modelBuilder.Entity("SCG.CHEM.MBR.DATAACCESS.Entities.Temp.MBR_TMP_MARKET_PRICE_MAPPING", b =>
                {
                    b.Property<string>("MarketPriceMI")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MarketPriceWebPricing")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("VersionNo")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedFlag")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("EBACode")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("MarketPriceName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MarketPriceShortName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MarketPriceMI", "MarketPriceWebPricing", "VersionNo");

                    b.ToTable("MBR_TMP_MarketPriceMapping", "mbr");
                });

            modelBuilder.Entity("SCG.CHEM.MBR.DATAACCESS.Entities.Temp.MBR_TMP_PRODUCT_MAPPING", b =>
                {
                    b.Property<string>("MaterialCode")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("VersionNo")
                        .HasColumnType("int");

                    b.Property<string>("SourceSystem")
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedFlag")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("ProductGroup")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ProductShortName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaterialCode", "VersionNo", "SourceSystem");

                    b.ToTable("MBR_TMP_ProductMapping", "mbr");
                });

            modelBuilder.Entity("SCG.CHEM.MBR.DATAACCESS.Entities.Transaction.MBR_TMP_BEGINING_INVENTORY", b =>
                {
                    b.Property<string>("Case")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Case");

                    b.Property<string>("Scenario")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Scenario");

                    b.Property<string>("Company")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("Company");

                    b.Property<string>("Cycle")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Cycle");

                    b.Property<string>("ProductShortName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ProductShortName");

                    b.Property<string>("MonthIndex")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("MonthIndex");

                    b.Property<string>("CopiedFrom")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CopiedFrom");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CyclePoly")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CyclePoly");

                    b.Property<string>("MCSC")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("MC/SC");

                    b.Property<string>("MergedWith")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("MergedWith");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(15,5)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Case", "Scenario", "Company", "Cycle", "ProductShortName", "MonthIndex");

                    b.ToTable("MBR_TMP_BeginningInventory", "mbr");
                });

            modelBuilder.Entity("SCG.CHEM.MBR.DATAACCESS.Entities.Transaction.MBR_TMP_FEED_CONSUMPTION", b =>
                {
                    b.Property<string>("Case")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Case");

                    b.Property<string>("Scenario")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Scenario");

                    b.Property<string>("Company")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("Company");

                    b.Property<string>("Cycle")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Cycle");

                    b.Property<string>("FeedName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FeedName");

                    b.Property<string>("MonthIndex")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("MonthIndex");

                    b.Property<string>("CopiedFrom")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CopiedFrom");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CyclePoly")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CyclePoly");

                    b.Property<string>("ElementCodeEBA")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("ElementCode(EBA)");

                    b.Property<string>("FeedShortName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FeedShortName");

                    b.Property<string>("MCSC")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("MC/SC");

                    b.Property<string>("MergedWith")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("MergedWith");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(15,5)");

                    b.Property<string>("SupplierKey")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SupplierKey");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Case", "Scenario", "Company", "Cycle", "FeedName", "MonthIndex");

                    b.ToTable("MBR_TMP_FeedConsumption", "mbr");
                });

            modelBuilder.Entity("SCG.CHEM.MBR.DATAACCESS.Entities.Transaction.MBR_TMP_FEED_PURCHASE", b =>
                {
                    b.Property<string>("Case")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Case");

                    b.Property<string>("Scenario")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Scenario");

                    b.Property<string>("Company")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("Company");

                    b.Property<string>("Cycle")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Cycle");

                    b.Property<string>("FeedName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FeedName");

                    b.Property<string>("MonthIndex")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("MonthIndex");

                    b.Property<string>("CopiedFrom")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CopiedFrom");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CyclePoly")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CyclePoly");

                    b.Property<string>("ElementCodeEBA")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("ElementCode(EBA)");

                    b.Property<string>("FeedShortName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FeedShortName");

                    b.Property<string>("MCSC")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("MC/SC");

                    b.Property<string>("MergedWith")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("MergedWith");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(15,5)");

                    b.Property<string>("SupplierKey")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SupplierKey");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Case", "Scenario", "Company", "Cycle", "FeedName", "MonthIndex");

                    b.ToTable("MBR_TMP_FeedPurchase", "mbr");
                });

            modelBuilder.Entity("SCG.CHEM.MBR.DATAACCESS.Entities.Transaction.MBR_TMP_PRODUCTION_VOLUME", b =>
                {
                    b.Property<string>("Case")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Case");

                    b.Property<string>("Scenario")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Scenario");

                    b.Property<string>("Company")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("Company");

                    b.Property<string>("Cycle")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Cycle");

                    b.Property<string>("ProductName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ProductName");

                    b.Property<string>("MonthIndex")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("MonthIndex");

                    b.Property<string>("CopiedFrom")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CopiedFrom");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CyclePoly")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CyclePoly");

                    b.Property<string>("ElementCodeEBA")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("ElementCode(EBA)");

                    b.Property<string>("MCSC")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("MC/SC");

                    b.Property<string>("MergedWith")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("MergedWith");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(15,5)");

                    b.Property<string>("ProductShortName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ProductShortName");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Case", "Scenario", "Company", "Cycle", "ProductName", "MonthIndex");

                    b.ToTable("MBR_TMP_ProductionVolume", "mbr");
                });

            modelBuilder.Entity("SCG.CHEM.MBR.DATAACCESS.Entities.Transaction.MBR_TRN_BEGINING_INVENTORY", b =>
                {
                    b.Property<string>("Case")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Case");

                    b.Property<string>("Scenario")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Scenario");

                    b.Property<string>("Company")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("Company");

                    b.Property<string>("Cycle")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Cycle");

                    b.Property<string>("ProductShortName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ProductShortName");

                    b.Property<string>("MonthIndex")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("MonthIndex");

                    b.Property<string>("CopiedFrom")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CopiedFrom");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CyclePoly")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CyclePoly");

                    b.Property<string>("MCSC")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("MC/SC");

                    b.Property<string>("MergedWith")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("MergedWith");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(15,5)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Case", "Scenario", "Company", "Cycle", "ProductShortName", "MonthIndex");

                    b.ToTable("MBR_TRN_BeginningInventory", "mbr");
                });

            modelBuilder.Entity("SCG.CHEM.MBR.DATAACCESS.Entities.Transaction.MBR_TRN_FEED_CONSUMPTION", b =>
                {
                    b.Property<string>("Case")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Case");

                    b.Property<string>("Scenario")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Scenario");

                    b.Property<string>("Company")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("Company");

                    b.Property<string>("Cycle")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Cycle");

                    b.Property<string>("FeedName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FeedName");

                    b.Property<string>("MonthIndex")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("MonthIndex");

                    b.Property<string>("CopiedFrom")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CopiedFrom");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CyclePoly")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CyclePoly");

                    b.Property<string>("ElementCodeEBA")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("ElementCode(EBA)");

                    b.Property<string>("FeedShortName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FeedShortName");

                    b.Property<string>("MCSC")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("MC/SC");

                    b.Property<string>("MergedWith")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("MergedWith");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(15,5)");

                    b.Property<string>("SupplierKey")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SupplierKey");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Case", "Scenario", "Company", "Cycle", "FeedName", "MonthIndex");

                    b.ToTable("MBR_TRN_FeedConsumption", "mbr");
                });

            modelBuilder.Entity("SCG.CHEM.MBR.DATAACCESS.Entities.Transaction.MBR_TRN_FEED_PURCHASE", b =>
                {
                    b.Property<string>("Case")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Case");

                    b.Property<string>("Scenario")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Scenario");

                    b.Property<string>("Company")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("Company");

                    b.Property<string>("Cycle")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Cycle");

                    b.Property<string>("FeedName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FeedName");

                    b.Property<string>("MonthIndex")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("MonthIndex");

                    b.Property<string>("CopiedFrom")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CopiedFrom");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CyclePoly")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CyclePoly");

                    b.Property<string>("ElementCodeEBA")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("ElementCode(EBA)");

                    b.Property<string>("FeedShortName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FeedShortName");

                    b.Property<string>("MCSC")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("MC/SC");

                    b.Property<string>("MergedWith")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("MergedWith");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(15,5)");

                    b.Property<string>("SupplierKey")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SupplierKey");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Case", "Scenario", "Company", "Cycle", "FeedName", "MonthIndex");

                    b.ToTable("MBR_TRN_FeedPurchase", "mbr");
                });

            modelBuilder.Entity("SCG.CHEM.MBR.DATAACCESS.Entities.Transaction.MBR_TRN_MARKET_PRICE_FORECAST", b =>
                {
                    b.Property<string>("Case")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Case");

                    b.Property<string>("Scenario")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Scenario");

                    b.Property<string>("MarketSource")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MarketSource");

                    b.Property<string>("Cycle")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Cycle");

                    b.Property<string>("MonthIndex")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("MonthIndex");

                    b.Property<string>("CopiedFrom")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CopiedFrom");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CyclePoly")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CyclePoly");

                    b.Property<string>("MergedWith")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("MergedWith");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(15,5)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Unit");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Case", "Scenario", "MarketSource", "Cycle", "MonthIndex");

                    b.ToTable("MBR_TRN_MarketPriceForecast", "mbr");
                });

            modelBuilder.Entity("SCG.CHEM.MBR.DATAACCESS.Entities.Transaction.MBR_TRN_PRODUCTION_VOLUME", b =>
                {
                    b.Property<string>("Case")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Case");

                    b.Property<string>("Scenario")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Scenario");

                    b.Property<string>("Company")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("Company");

                    b.Property<string>("Cycle")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Cycle");

                    b.Property<string>("ProductName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ProductName");

                    b.Property<string>("MonthIndex")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("MonthIndex");

                    b.Property<string>("CopiedFrom")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CopiedFrom");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CyclePoly")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CyclePoly");

                    b.Property<string>("ElementCodeEBA")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("ElementCode(EBA)");

                    b.Property<string>("MCSC")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("MC/SC");

                    b.Property<string>("MergedWith")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("MergedWith");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(15,5)");

                    b.Property<string>("ProductShortName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ProductShortName");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Case", "Scenario", "Company", "Cycle", "ProductName", "MonthIndex");

                    b.ToTable("MBR_TRN_ProductionVolume", "mbr");
                });

            modelBuilder.Entity("SCG.CHEM.MBR.DATAACCESS.Entities.Views.Master.vMBR_MST_CustomerVendorMapping", b =>
                {
                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerShortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceSystem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToView("vMBR_MST_CustomerVendorMapping");
                });

            modelBuilder.Entity("SCG.CHEM.MBR.DATAACCESS.Entities.Views.Master.vMBR_MST_LSPPriceFormula", b =>
                {
                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FormulaDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FORMULA_DESCRIPTION");

                    b.Property<string>("FormulaEquation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FORMULA_EQUATION");

                    b.Property<string>("FormulaName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FORMULA_NAME");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PRODUCT_CODE");

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PRODUCT_DESCRIPTION");

                    b.Property<string>("ProductShortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PRODUCT_SHORT_NAME");

                    b.ToView("vMBR_MST_LSPPriceFormula");
                });

            modelBuilder.Entity("SCG.CHEM.MBR.DATAACCESS.Entities.Views.Master.vMBR_MST_MarketPriceMapping", b =>
                {
                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EBACode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketPriceMI")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketPriceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketPriceShortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketPriceWebPricing")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToView("vMBR_MST_MarketPriceMapping");
                });

            modelBuilder.Entity("SCG.CHEM.MBR.DATAACCESS.Entities.Views.Master.vMBR_MST_ProductMapping", b =>
                {
                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaterialCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductGroup")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductShortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceSystem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToView("vMBR_MST_ProductMapping");
                });
#pragma warning restore 612, 618
        }
    }
}
